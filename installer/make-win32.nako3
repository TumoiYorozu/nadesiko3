# なでしこ3 for win32 生成スクリプト

出力先＝「{母艦パス}/nako3-win32」
コピー元＝「{母艦パス}」を「../」で相対パス展開
テンプレート元＝「{母艦パス}/nako3-win32-template」

### 環境変数の値を採用 ###
ENV=環境変数一覧取得
OUT=ENV["NAKO_WIN32_OUT"]
もし、OUTがundefinedならば
違えば
  出力先＝OUT
ここまで

### テスト:ここから ###
もし、テンプレート元が存在するならば
  「テンプレート存在」と表示
違えば
  「準備が必要です：テンプレートがありません」のエラー発生
  終わり。
ここまで。

### デバッグ ###
「--- PATH ---
テンプレート元={テンプレート元}
コピー元={コピー元}
出力先={出力先}
---」を表示。


# --- nakopadがあるか？
もし、「{テンプレート元}/bin/nakopad.exe」が存在するならば
  「テンプレート正常:nakopad」と表示。
違えば
  「準備が必要です：nakopad.exeをテンプレートのbin/にコピーしてください。」のエラー発生
  終わり。
ここまで。

# --- Node.jsがあるか？
NODEJS=「{出力先}/nodejs.7z」
もし、NODEJSが存在するならば
  「NODEJS存在」と表示。
違えば
  「準備が必要です：node.jsのwin32(32bit)版を解凍して、『{出力先}/nodejs』に配置してください」のエラー発生
  終わり。
ここまで。
### テスト:ここまで ###

# メイン処理
コマンド一覧＝「#!/bin/bash
# ---ここから実行---
echo win32の作成バッチを実行します
」
バッチ作成。
コマンド一覧を表示。
コマンド一覧を「{コピー元}/win32.bash」へ保存。
「以上のバッチを以下のパスに保存しました。
sudo bash {コピー元}/win32.bash
と実行してください。」と表示。

●バッチ作成
  「README.md」を個別コピー処理。
  「package.json」を個別コピー処理。
  「webpack.config.js」を個別コピー処理。
  「bin」を削除付きファイルコピー処理。
  「batch」を削除付きファイルコピー処理。
  「demo」を削除付きファイルコピー処理。
  「doc」を削除付きファイルコピー処理。
  「release」を削除付きファイルコピー処理。
  「src」を削除付きファイルコピー処理。
  「tmp」を削除付きファイルコピー処理。
  「test」を削除付きファイルコピー処理。
  「tools」を削除付きファイルコピー処理。
  テンプレートコピー処理。
  DS_STORE削除
  コマンド一覧＝コマンド一覧＆「echo ok.{改行}# --- ここまで ---」&改行。
ここまで

●DS_STORE削除
  コマンド一覧＝コマンド一覧＆「# --- 不要ファイルを列挙中 ---」&改行。
  出力先の全ファイル列挙。
  反復
    F=対象
    B=Fのファイル名抽出
    もし、B=「.DS_Store」ならば
      CMD=「rm {F}」
　　　　コマンド一覧＝コマンド一覧＆CMD&改行
    ここまで
  ここまで
ここまで

●テンプレートコピー処理
  CMD = 「cp -f -r {テンプレート元}/* {出力先}/」
　コマンド一覧＝コマンド一覧＆CMD&改行
ここまで

●(Pを)個別コピー処理とは
　FI＝「{コピー元}/{P}」
　FO=「{出力先}/{P}」
　# FIからFOへファイルコピー
　CMD=「\cp -f {FI} {FO}」
　コマンド一覧＝コマンド一覧＆CMD&改行
ここまで

●(PATHを)ファイルコピー処理とは
  CMD=「cp -f {コピー元}/{PATH}/* {出力先}/{PATH}/」
　コマンド一覧＝コマンド一覧＆CMD&改行
ここまで

●(PATHを)削除付きファイルコピー処理とは
  # ---
  出力DIR=「{出力先}/{PATH}」
  もし、出力DIRのフォルダ存在するならば
    CMD=「rm -f -r {出力DIR}」
　　コマンド一覧＝コマンド一覧＆CMD&改行
  違えば
    出力DIRをフォルダ作成。
  ここまで。
  # ---
  CMD=「cp -f -r {コピー元}/{PATH}/ {出力DIR}/」
　コマンド一覧＝コマンド一覧＆CMD&改行
ここまで
