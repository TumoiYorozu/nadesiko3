# なでしこ3 for win32 生成スクリプト

出力先＝「{母艦パス}/nako3-win32」
コピー元＝「{母艦パス}」を「../」で相対パス展開
テンプレート元＝「{母艦パス}/nako3-win32-template」

### 環境変数の値を採用 ###
ENV=環境変数一覧取得
OUT=ENV["NAKO_WIN32_OUT"]
もし、OUTがundefinedならば
違えば
  出力先＝OUT
ここまで

### テスト:ここから ###
もし、テンプレート元が存在するならば
  「テンプレート存在」と表示
違えば
  「準備が必要です：テンプレートがありません」のエラー発生
  終わり。
ここまで。
#
NODEJS=「{出力先}/nodejs」
もし、NODEJSが存在するならば
  「NODEJS存在」と表示。
違えば
  「準備が必要です：node.jsのwin32(32bit)版を解凍して、『{出力先}/nodejs』に配置してください」のエラー発生
  終わり。
ここまで。
### テスト:ここまで ###

# メイン処理
自動作成実行。

●自動作成実行
  「README.md」を個別コピー処理。
  「package.json」を個別コピー処理。
  「bin」を削除付きファイルコピー処理。
  「batch」を削除付きファイルコピー処理。
  「demo」を削除付きファイルコピー処理。
  「doc」を削除付きファイルコピー処理。
  「release」を削除付きファイルコピー処理。
  「src」を削除付きファイルコピー処理。
  「test」を削除付きファイルコピー処理。
  「tools」を削除付きファイルコピー処理。
  テンプレートコピー処理。
  DS_STORE削除
ここまで

●DS_STORE削除
  出力先の全ファイル列挙。
  反復
    F=対象
    B=Fのファイル名抽出
    もし、B=「.DS_Store」ならば
      「削除:{F}」を表示。
      「rm {F}」を起動。
    ここまで
  ここまで
ここまで

●テンプレートコピー処理
  テンプレート元の全ファイル列挙。
  反復
    S=対象
    F=対象のテンプレート元＆「/」を「」に置換。
    Fを表示。
    もし、MID(F,1,1)="."ならば、続ける。
    CMD=「cp {S} {出力先}/{F}」
    CMDを表示。
    CMDを起動。
  ここまで
ここまで

●(PATHを)個別コピー処理とは
  CMD=「cp {コピー元}/{PATH} {出力先}/{PATH}」
  CMDを表示。
  CMDを起動待機。
ここまで

●(PATHを)ファイルコピー処理とは
  CMD=「cp {コピー元}/{PATH}/* {出力先}/{PATH}/」
  CMDを表示。
  CMDを起動待機。
ここまで

●(PATHを)削除付きファイルコピー処理とは
  # ---
  出力DIR=「{出力先}/{PATH}」
  もし、出力DIRのフォルダ存在するならば
    CMD=「rm -r {出力DIR}」
    CMDを表示。
    CMDを起動待機。
  違えば
    出力DIRをフォルダ作成。
  ここまで。
  # ---
  CMD=「cp -r {コピー元}/{PATH} {出力DIR}/」
  CMDを表示。
  CMDを起動待機。
ここまで
